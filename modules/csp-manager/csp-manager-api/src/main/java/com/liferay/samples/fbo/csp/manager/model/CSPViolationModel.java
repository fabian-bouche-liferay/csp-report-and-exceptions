/**
 * SPDX-FileCopyrightText: (c) 2024 Liferay, Inc. https://liferay.com
 * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06
 */

package com.liferay.samples.fbo.csp.manager.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedAuditedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the CSPViolation service. Represents a row in the &quot;FOO_CSPViolation&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.liferay.samples.fbo.csp.manager.model.impl.CSPViolationModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.liferay.samples.fbo.csp.manager.model.impl.CSPViolationImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see CSPViolation
 * @generated
 */
@ProviderType
public interface CSPViolationModel
	extends BaseModel<CSPViolation>, GroupedModel, ShardedModel,
			StagedAuditedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a csp violation model instance should use the {@link CSPViolation} interface instead.
	 */

	/**
	 * Returns the primary key of this csp violation.
	 *
	 * @return the primary key of this csp violation
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this csp violation.
	 *
	 * @param primaryKey the primary key of this csp violation
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this csp violation.
	 *
	 * @return the uuid of this csp violation
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this csp violation.
	 *
	 * @param uuid the uuid of this csp violation
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the csp violation ID of this csp violation.
	 *
	 * @return the csp violation ID of this csp violation
	 */
	public long getCspViolationId();

	/**
	 * Sets the csp violation ID of this csp violation.
	 *
	 * @param cspViolationId the csp violation ID of this csp violation
	 */
	public void setCspViolationId(long cspViolationId);

	/**
	 * Returns the group ID of this csp violation.
	 *
	 * @return the group ID of this csp violation
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this csp violation.
	 *
	 * @param groupId the group ID of this csp violation
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this csp violation.
	 *
	 * @return the company ID of this csp violation
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this csp violation.
	 *
	 * @param companyId the company ID of this csp violation
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this csp violation.
	 *
	 * @return the user ID of this csp violation
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this csp violation.
	 *
	 * @param userId the user ID of this csp violation
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this csp violation.
	 *
	 * @return the user uuid of this csp violation
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this csp violation.
	 *
	 * @param userUuid the user uuid of this csp violation
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this csp violation.
	 *
	 * @return the user name of this csp violation
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this csp violation.
	 *
	 * @param userName the user name of this csp violation
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this csp violation.
	 *
	 * @return the create date of this csp violation
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this csp violation.
	 *
	 * @param createDate the create date of this csp violation
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this csp violation.
	 *
	 * @return the modified date of this csp violation
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this csp violation.
	 *
	 * @param modifiedDate the modified date of this csp violation
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the plid of this csp violation.
	 *
	 * @return the plid of this csp violation
	 */
	public long getPlid();

	/**
	 * Sets the plid of this csp violation.
	 *
	 * @param plid the plid of this csp violation
	 */
	public void setPlid(long plid);

	/**
	 * Returns the url of this csp violation.
	 *
	 * @return the url of this csp violation
	 */
	@AutoEscape
	public String getUrl();

	/**
	 * Sets the url of this csp violation.
	 *
	 * @param url the url of this csp violation
	 */
	public void setUrl(String url);

	/**
	 * Returns the violation type of this csp violation.
	 *
	 * @return the violation type of this csp violation
	 */
	@AutoEscape
	public String getViolationType();

	/**
	 * Sets the violation type of this csp violation.
	 *
	 * @param violationType the violation type of this csp violation
	 */
	public void setViolationType(String violationType);

	/**
	 * Returns the violation of this csp violation.
	 *
	 * @return the violation of this csp violation
	 */
	@AutoEscape
	public String getViolation();

	/**
	 * Sets the violation of this csp violation.
	 *
	 * @param violation the violation of this csp violation
	 */
	public void setViolation(String violation);

	/**
	 * Returns the violation hash of this csp violation.
	 *
	 * @return the violation hash of this csp violation
	 */
	@AutoEscape
	public String getViolationHash();

	/**
	 * Sets the violation hash of this csp violation.
	 *
	 * @param violationHash the violation hash of this csp violation
	 */
	public void setViolationHash(String violationHash);

	/**
	 * Returns the white listed of this csp violation.
	 *
	 * @return the white listed of this csp violation
	 */
	public boolean getWhiteListed();

	/**
	 * Returns <code>true</code> if this csp violation is white listed.
	 *
	 * @return <code>true</code> if this csp violation is white listed; <code>false</code> otherwise
	 */
	public boolean isWhiteListed();

	/**
	 * Sets whether this csp violation is white listed.
	 *
	 * @param whiteListed the white listed of this csp violation
	 */
	public void setWhiteListed(boolean whiteListed);

	@Override
	public CSPViolation cloneWithOriginalValues();

	public default String toXmlString() {
		return null;
	}

}